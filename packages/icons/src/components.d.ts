/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
	interface CoreiconsLogoDiscord {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsLogoFigma {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsLogoGithub {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsLogoReddit {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAirplay {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAlertTriangle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAlign {
		height?: string | number;
		variant: "center" | "justify" | "left" | "right";
		width?: string | number;
	}
	interface CoreiconsShapeArrow {
		height?: string | number;
		variant: "up" | "right" | "down" | "left";
		width?: string | number;
	}
	interface CoreiconsShapeAtSign {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAward {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeBarChart {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeBell {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeBold {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeBook {
		height?: string | number;
		variant: "open" | "close";
		width?: string | number;
	}
	interface CoreiconsShapeBox {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCalendar {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCast {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCheck {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeChevron {
		height?: string | number;
		variant: "up" | "right" | "down" | "left";
		width?: string | number;
	}
	interface CoreiconsShapeChevrons {
		height?: string | number;
		variant: "up" | "right" | "down" | "left";
		width?: string | number;
	}
	interface CoreiconsShapeCircle {
		height?: string | number;
		variant: "outline" | "filled";
		width?: string | number;
	}
	interface CoreiconsShapeClipboard {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeClock {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCloud {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeCode {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCompass {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCopy {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCorner {
		height?: string | number;
		variant:
			| "down-right"
			| "down-left"
			| "left-down"
			| "left-up"
			| "up-left"
			| "up-right"
			| "right-up"
			| "right-down";
		width?: string | number;
	}
	interface CoreiconsShapeDelete {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeDice {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeDownload {
		height?: string | number;
		variant: "arrow" | "cloud";
		width?: string | number;
	}
	interface CoreiconsShapeEdit {
		height?: string | number;
		variant: "box" | "pencil" | "line-with-pencil";
		width?: string | number;
	}
	interface CoreiconsShapeExpand {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeExternalLink {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeEye {
		height?: string | number;
		variant: "open" | "close";
		width?: string | number;
	}
	interface CoreiconsShapeFile {
		height?: string | number;
		variant: "normal" | "minus" | "plus" | "text";
		width?: string | number;
	}
	interface CoreiconsShapeFilter {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeFlag {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeFolder {
		height?: string | number;
		variant: "normal" | "minus" | "plus";
		width?: string | number;
	}
	interface CoreiconsShapeForum {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeFrown {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeGift {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeGlobe {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeGrid {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHardDrive {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHash {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHeadphones {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHeart {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHelpCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHome {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeInfo {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeItalic {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeKey {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLink {
		height?: string | number;
		variant: "tilted" | "horizontal";
		width?: string | number;
	}
	interface CoreiconsShapeList {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLock {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLogIn {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLogOut {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLogo {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMail {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMapPin {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMaximize {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMediaSkip {
		height?: string | number;
		variant: "fast-forward" | "rewind";
		width?: string | number;
	}
	interface CoreiconsShapeMeh {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMenu {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMessageCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMinimize {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMinus {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMonitor {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMoon {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMore {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMousePointer {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMove {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePause {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePauseCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePlay {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePlayCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePlus {
		height?: string | number;
		variant: "no-border" | "circle" | "square";
		width?: string | number;
	}
	interface CoreiconsShapePreferences {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeRefresh {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeRepeat {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeRotate {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSave {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSearch {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSettings {
		height?: string | number;
		variant: "outline" | "filled";
		width?: string | number;
	}
	interface CoreiconsShapeShare {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeShield {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeShoppingCart {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeShrink {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSmartphone {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSmile {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSpeaker {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeStar {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSun {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTag {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTerminal {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeThumbs {
		height?: string | number;
		variant: "up" | "down";
		width?: string | number;
	}
	interface CoreiconsShapeToggle {
		height?: string | number;
		variant: "off" | "on";
		width?: string | number;
	}
	interface CoreiconsShapeTool {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTrash {
		height?: string | number;
		variant: "with-lines" | "without-lines";
		width?: string | number;
	}
	interface CoreiconsShapeTrending {
		height?: string | number;
		variant: "up" | "down";
		width?: string | number;
	}
	interface CoreiconsShapeTriangle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTwitter {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeType {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeUnderline {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeUnlock {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeUpload {
		height?: string | number;
		variant: "arrow" | "cloud";
		width?: string | number;
	}
	interface CoreiconsShapeUser {
		height?: string | number;
		variant: "normal" | "check" | "minus" | "plus" | "x";
		width?: string | number;
	}
	interface CoreiconsShapeUsers {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeVolume {
		height?: string | number;
		variant: "off" | "half" | "full" | "mute";
		width?: string | number;
	}
	interface CoreiconsShapeX {
		height?: string | number;
		variant: "no-border" | "circle" | "octagon" | "square";
		width?: string | number;
	}
	interface CoreiconsShapeZap {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeZoom {
		height?: string | number;
		variant: "in" | "out";
		width?: string | number;
	}
}
declare global {
	interface HTMLCoreiconsLogoDiscordElement
		extends Components.CoreiconsLogoDiscord,
			HTMLStencilElement {}
	var HTMLCoreiconsLogoDiscordElement: {
		prototype: HTMLCoreiconsLogoDiscordElement;
		new (): HTMLCoreiconsLogoDiscordElement;
	};
	interface HTMLCoreiconsLogoFigmaElement
		extends Components.CoreiconsLogoFigma,
			HTMLStencilElement {}
	var HTMLCoreiconsLogoFigmaElement: {
		prototype: HTMLCoreiconsLogoFigmaElement;
		new (): HTMLCoreiconsLogoFigmaElement;
	};
	interface HTMLCoreiconsLogoGithubElement
		extends Components.CoreiconsLogoGithub,
			HTMLStencilElement {}
	var HTMLCoreiconsLogoGithubElement: {
		prototype: HTMLCoreiconsLogoGithubElement;
		new (): HTMLCoreiconsLogoGithubElement;
	};
	interface HTMLCoreiconsLogoRedditElement
		extends Components.CoreiconsLogoReddit,
			HTMLStencilElement {}
	var HTMLCoreiconsLogoRedditElement: {
		prototype: HTMLCoreiconsLogoRedditElement;
		new (): HTMLCoreiconsLogoRedditElement;
	};
	interface HTMLCoreiconsShapeAirplayElement
		extends Components.CoreiconsShapeAirplay,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeAirplayElement: {
		prototype: HTMLCoreiconsShapeAirplayElement;
		new (): HTMLCoreiconsShapeAirplayElement;
	};
	interface HTMLCoreiconsShapeAlertTriangleElement
		extends Components.CoreiconsShapeAlertTriangle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeAlertTriangleElement: {
		prototype: HTMLCoreiconsShapeAlertTriangleElement;
		new (): HTMLCoreiconsShapeAlertTriangleElement;
	};
	interface HTMLCoreiconsShapeAlignElement
		extends Components.CoreiconsShapeAlign,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeAlignElement: {
		prototype: HTMLCoreiconsShapeAlignElement;
		new (): HTMLCoreiconsShapeAlignElement;
	};
	interface HTMLCoreiconsShapeArrowElement
		extends Components.CoreiconsShapeArrow,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeArrowElement: {
		prototype: HTMLCoreiconsShapeArrowElement;
		new (): HTMLCoreiconsShapeArrowElement;
	};
	interface HTMLCoreiconsShapeAtSignElement
		extends Components.CoreiconsShapeAtSign,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeAtSignElement: {
		prototype: HTMLCoreiconsShapeAtSignElement;
		new (): HTMLCoreiconsShapeAtSignElement;
	};
	interface HTMLCoreiconsShapeAwardElement
		extends Components.CoreiconsShapeAward,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeAwardElement: {
		prototype: HTMLCoreiconsShapeAwardElement;
		new (): HTMLCoreiconsShapeAwardElement;
	};
	interface HTMLCoreiconsShapeBarChartElement
		extends Components.CoreiconsShapeBarChart,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeBarChartElement: {
		prototype: HTMLCoreiconsShapeBarChartElement;
		new (): HTMLCoreiconsShapeBarChartElement;
	};
	interface HTMLCoreiconsShapeBellElement
		extends Components.CoreiconsShapeBell,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeBellElement: {
		prototype: HTMLCoreiconsShapeBellElement;
		new (): HTMLCoreiconsShapeBellElement;
	};
	interface HTMLCoreiconsShapeBoldElement
		extends Components.CoreiconsShapeBold,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeBoldElement: {
		prototype: HTMLCoreiconsShapeBoldElement;
		new (): HTMLCoreiconsShapeBoldElement;
	};
	interface HTMLCoreiconsShapeBookElement
		extends Components.CoreiconsShapeBook,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeBookElement: {
		prototype: HTMLCoreiconsShapeBookElement;
		new (): HTMLCoreiconsShapeBookElement;
	};
	interface HTMLCoreiconsShapeBoxElement extends Components.CoreiconsShapeBox, HTMLStencilElement {}
	var HTMLCoreiconsShapeBoxElement: {
		prototype: HTMLCoreiconsShapeBoxElement;
		new (): HTMLCoreiconsShapeBoxElement;
	};
	interface HTMLCoreiconsShapeCalendarElement
		extends Components.CoreiconsShapeCalendar,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCalendarElement: {
		prototype: HTMLCoreiconsShapeCalendarElement;
		new (): HTMLCoreiconsShapeCalendarElement;
	};
	interface HTMLCoreiconsShapeCastElement
		extends Components.CoreiconsShapeCast,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCastElement: {
		prototype: HTMLCoreiconsShapeCastElement;
		new (): HTMLCoreiconsShapeCastElement;
	};
	interface HTMLCoreiconsShapeCheckElement
		extends Components.CoreiconsShapeCheck,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCheckElement: {
		prototype: HTMLCoreiconsShapeCheckElement;
		new (): HTMLCoreiconsShapeCheckElement;
	};
	interface HTMLCoreiconsShapeChevronElement
		extends Components.CoreiconsShapeChevron,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeChevronElement: {
		prototype: HTMLCoreiconsShapeChevronElement;
		new (): HTMLCoreiconsShapeChevronElement;
	};
	interface HTMLCoreiconsShapeChevronsElement
		extends Components.CoreiconsShapeChevrons,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeChevronsElement: {
		prototype: HTMLCoreiconsShapeChevronsElement;
		new (): HTMLCoreiconsShapeChevronsElement;
	};
	interface HTMLCoreiconsShapeCircleElement
		extends Components.CoreiconsShapeCircle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCircleElement: {
		prototype: HTMLCoreiconsShapeCircleElement;
		new (): HTMLCoreiconsShapeCircleElement;
	};
	interface HTMLCoreiconsShapeClipboardElement
		extends Components.CoreiconsShapeClipboard,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeClipboardElement: {
		prototype: HTMLCoreiconsShapeClipboardElement;
		new (): HTMLCoreiconsShapeClipboardElement;
	};
	interface HTMLCoreiconsShapeClockElement
		extends Components.CoreiconsShapeClock,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeClockElement: {
		prototype: HTMLCoreiconsShapeClockElement;
		new (): HTMLCoreiconsShapeClockElement;
	};
	interface HTMLCoreiconsShapeCloudElement
		extends Components.CoreiconsShapeCloud,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCloudElement: {
		prototype: HTMLCoreiconsShapeCloudElement;
		new (): HTMLCoreiconsShapeCloudElement;
	};
	interface HTMLCoreiconsShapeCodeElement
		extends Components.CoreiconsShapeCode,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCodeElement: {
		prototype: HTMLCoreiconsShapeCodeElement;
		new (): HTMLCoreiconsShapeCodeElement;
	};
	interface HTMLCoreiconsShapeCompassElement
		extends Components.CoreiconsShapeCompass,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCompassElement: {
		prototype: HTMLCoreiconsShapeCompassElement;
		new (): HTMLCoreiconsShapeCompassElement;
	};
	interface HTMLCoreiconsShapeCopyElement
		extends Components.CoreiconsShapeCopy,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCopyElement: {
		prototype: HTMLCoreiconsShapeCopyElement;
		new (): HTMLCoreiconsShapeCopyElement;
	};
	interface HTMLCoreiconsShapeCornerElement
		extends Components.CoreiconsShapeCorner,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeCornerElement: {
		prototype: HTMLCoreiconsShapeCornerElement;
		new (): HTMLCoreiconsShapeCornerElement;
	};
	interface HTMLCoreiconsShapeDeleteElement
		extends Components.CoreiconsShapeDelete,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeDeleteElement: {
		prototype: HTMLCoreiconsShapeDeleteElement;
		new (): HTMLCoreiconsShapeDeleteElement;
	};
	interface HTMLCoreiconsShapeDiceElement
		extends Components.CoreiconsShapeDice,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeDiceElement: {
		prototype: HTMLCoreiconsShapeDiceElement;
		new (): HTMLCoreiconsShapeDiceElement;
	};
	interface HTMLCoreiconsShapeDownloadElement
		extends Components.CoreiconsShapeDownload,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeDownloadElement: {
		prototype: HTMLCoreiconsShapeDownloadElement;
		new (): HTMLCoreiconsShapeDownloadElement;
	};
	interface HTMLCoreiconsShapeEditElement
		extends Components.CoreiconsShapeEdit,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeEditElement: {
		prototype: HTMLCoreiconsShapeEditElement;
		new (): HTMLCoreiconsShapeEditElement;
	};
	interface HTMLCoreiconsShapeExpandElement
		extends Components.CoreiconsShapeExpand,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeExpandElement: {
		prototype: HTMLCoreiconsShapeExpandElement;
		new (): HTMLCoreiconsShapeExpandElement;
	};
	interface HTMLCoreiconsShapeExternalLinkElement
		extends Components.CoreiconsShapeExternalLink,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeExternalLinkElement: {
		prototype: HTMLCoreiconsShapeExternalLinkElement;
		new (): HTMLCoreiconsShapeExternalLinkElement;
	};
	interface HTMLCoreiconsShapeEyeElement extends Components.CoreiconsShapeEye, HTMLStencilElement {}
	var HTMLCoreiconsShapeEyeElement: {
		prototype: HTMLCoreiconsShapeEyeElement;
		new (): HTMLCoreiconsShapeEyeElement;
	};
	interface HTMLCoreiconsShapeFileElement
		extends Components.CoreiconsShapeFile,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeFileElement: {
		prototype: HTMLCoreiconsShapeFileElement;
		new (): HTMLCoreiconsShapeFileElement;
	};
	interface HTMLCoreiconsShapeFilterElement
		extends Components.CoreiconsShapeFilter,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeFilterElement: {
		prototype: HTMLCoreiconsShapeFilterElement;
		new (): HTMLCoreiconsShapeFilterElement;
	};
	interface HTMLCoreiconsShapeFlagElement
		extends Components.CoreiconsShapeFlag,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeFlagElement: {
		prototype: HTMLCoreiconsShapeFlagElement;
		new (): HTMLCoreiconsShapeFlagElement;
	};
	interface HTMLCoreiconsShapeFolderElement
		extends Components.CoreiconsShapeFolder,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeFolderElement: {
		prototype: HTMLCoreiconsShapeFolderElement;
		new (): HTMLCoreiconsShapeFolderElement;
	};
	interface HTMLCoreiconsShapeForumElement
		extends Components.CoreiconsShapeForum,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeForumElement: {
		prototype: HTMLCoreiconsShapeForumElement;
		new (): HTMLCoreiconsShapeForumElement;
	};
	interface HTMLCoreiconsShapeFrownElement
		extends Components.CoreiconsShapeFrown,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeFrownElement: {
		prototype: HTMLCoreiconsShapeFrownElement;
		new (): HTMLCoreiconsShapeFrownElement;
	};
	interface HTMLCoreiconsShapeGiftElement
		extends Components.CoreiconsShapeGift,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeGiftElement: {
		prototype: HTMLCoreiconsShapeGiftElement;
		new (): HTMLCoreiconsShapeGiftElement;
	};
	interface HTMLCoreiconsShapeGlobeElement
		extends Components.CoreiconsShapeGlobe,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeGlobeElement: {
		prototype: HTMLCoreiconsShapeGlobeElement;
		new (): HTMLCoreiconsShapeGlobeElement;
	};
	interface HTMLCoreiconsShapeGridElement
		extends Components.CoreiconsShapeGrid,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeGridElement: {
		prototype: HTMLCoreiconsShapeGridElement;
		new (): HTMLCoreiconsShapeGridElement;
	};
	interface HTMLCoreiconsShapeHardDriveElement
		extends Components.CoreiconsShapeHardDrive,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeHardDriveElement: {
		prototype: HTMLCoreiconsShapeHardDriveElement;
		new (): HTMLCoreiconsShapeHardDriveElement;
	};
	interface HTMLCoreiconsShapeHashElement
		extends Components.CoreiconsShapeHash,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeHashElement: {
		prototype: HTMLCoreiconsShapeHashElement;
		new (): HTMLCoreiconsShapeHashElement;
	};
	interface HTMLCoreiconsShapeHeadphonesElement
		extends Components.CoreiconsShapeHeadphones,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeHeadphonesElement: {
		prototype: HTMLCoreiconsShapeHeadphonesElement;
		new (): HTMLCoreiconsShapeHeadphonesElement;
	};
	interface HTMLCoreiconsShapeHeartElement
		extends Components.CoreiconsShapeHeart,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeHeartElement: {
		prototype: HTMLCoreiconsShapeHeartElement;
		new (): HTMLCoreiconsShapeHeartElement;
	};
	interface HTMLCoreiconsShapeHelpCircleElement
		extends Components.CoreiconsShapeHelpCircle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeHelpCircleElement: {
		prototype: HTMLCoreiconsShapeHelpCircleElement;
		new (): HTMLCoreiconsShapeHelpCircleElement;
	};
	interface HTMLCoreiconsShapeHomeElement
		extends Components.CoreiconsShapeHome,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeHomeElement: {
		prototype: HTMLCoreiconsShapeHomeElement;
		new (): HTMLCoreiconsShapeHomeElement;
	};
	interface HTMLCoreiconsShapeInfoElement
		extends Components.CoreiconsShapeInfo,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeInfoElement: {
		prototype: HTMLCoreiconsShapeInfoElement;
		new (): HTMLCoreiconsShapeInfoElement;
	};
	interface HTMLCoreiconsShapeItalicElement
		extends Components.CoreiconsShapeItalic,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeItalicElement: {
		prototype: HTMLCoreiconsShapeItalicElement;
		new (): HTMLCoreiconsShapeItalicElement;
	};
	interface HTMLCoreiconsShapeKeyElement extends Components.CoreiconsShapeKey, HTMLStencilElement {}
	var HTMLCoreiconsShapeKeyElement: {
		prototype: HTMLCoreiconsShapeKeyElement;
		new (): HTMLCoreiconsShapeKeyElement;
	};
	interface HTMLCoreiconsShapeLinkElement
		extends Components.CoreiconsShapeLink,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeLinkElement: {
		prototype: HTMLCoreiconsShapeLinkElement;
		new (): HTMLCoreiconsShapeLinkElement;
	};
	interface HTMLCoreiconsShapeListElement
		extends Components.CoreiconsShapeList,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeListElement: {
		prototype: HTMLCoreiconsShapeListElement;
		new (): HTMLCoreiconsShapeListElement;
	};
	interface HTMLCoreiconsShapeLockElement
		extends Components.CoreiconsShapeLock,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeLockElement: {
		prototype: HTMLCoreiconsShapeLockElement;
		new (): HTMLCoreiconsShapeLockElement;
	};
	interface HTMLCoreiconsShapeLogInElement
		extends Components.CoreiconsShapeLogIn,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeLogInElement: {
		prototype: HTMLCoreiconsShapeLogInElement;
		new (): HTMLCoreiconsShapeLogInElement;
	};
	interface HTMLCoreiconsShapeLogOutElement
		extends Components.CoreiconsShapeLogOut,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeLogOutElement: {
		prototype: HTMLCoreiconsShapeLogOutElement;
		new (): HTMLCoreiconsShapeLogOutElement;
	};
	interface HTMLCoreiconsShapeLogoElement
		extends Components.CoreiconsShapeLogo,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeLogoElement: {
		prototype: HTMLCoreiconsShapeLogoElement;
		new (): HTMLCoreiconsShapeLogoElement;
	};
	interface HTMLCoreiconsShapeMailElement
		extends Components.CoreiconsShapeMail,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMailElement: {
		prototype: HTMLCoreiconsShapeMailElement;
		new (): HTMLCoreiconsShapeMailElement;
	};
	interface HTMLCoreiconsShapeMapPinElement
		extends Components.CoreiconsShapeMapPin,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMapPinElement: {
		prototype: HTMLCoreiconsShapeMapPinElement;
		new (): HTMLCoreiconsShapeMapPinElement;
	};
	interface HTMLCoreiconsShapeMaximizeElement
		extends Components.CoreiconsShapeMaximize,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMaximizeElement: {
		prototype: HTMLCoreiconsShapeMaximizeElement;
		new (): HTMLCoreiconsShapeMaximizeElement;
	};
	interface HTMLCoreiconsShapeMediaSkipElement
		extends Components.CoreiconsShapeMediaSkip,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMediaSkipElement: {
		prototype: HTMLCoreiconsShapeMediaSkipElement;
		new (): HTMLCoreiconsShapeMediaSkipElement;
	};
	interface HTMLCoreiconsShapeMehElement extends Components.CoreiconsShapeMeh, HTMLStencilElement {}
	var HTMLCoreiconsShapeMehElement: {
		prototype: HTMLCoreiconsShapeMehElement;
		new (): HTMLCoreiconsShapeMehElement;
	};
	interface HTMLCoreiconsShapeMenuElement
		extends Components.CoreiconsShapeMenu,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMenuElement: {
		prototype: HTMLCoreiconsShapeMenuElement;
		new (): HTMLCoreiconsShapeMenuElement;
	};
	interface HTMLCoreiconsShapeMessageCircleElement
		extends Components.CoreiconsShapeMessageCircle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMessageCircleElement: {
		prototype: HTMLCoreiconsShapeMessageCircleElement;
		new (): HTMLCoreiconsShapeMessageCircleElement;
	};
	interface HTMLCoreiconsShapeMinimizeElement
		extends Components.CoreiconsShapeMinimize,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMinimizeElement: {
		prototype: HTMLCoreiconsShapeMinimizeElement;
		new (): HTMLCoreiconsShapeMinimizeElement;
	};
	interface HTMLCoreiconsShapeMinusElement
		extends Components.CoreiconsShapeMinus,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMinusElement: {
		prototype: HTMLCoreiconsShapeMinusElement;
		new (): HTMLCoreiconsShapeMinusElement;
	};
	interface HTMLCoreiconsShapeMonitorElement
		extends Components.CoreiconsShapeMonitor,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMonitorElement: {
		prototype: HTMLCoreiconsShapeMonitorElement;
		new (): HTMLCoreiconsShapeMonitorElement;
	};
	interface HTMLCoreiconsShapeMoonElement
		extends Components.CoreiconsShapeMoon,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMoonElement: {
		prototype: HTMLCoreiconsShapeMoonElement;
		new (): HTMLCoreiconsShapeMoonElement;
	};
	interface HTMLCoreiconsShapeMoreElement
		extends Components.CoreiconsShapeMore,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMoreElement: {
		prototype: HTMLCoreiconsShapeMoreElement;
		new (): HTMLCoreiconsShapeMoreElement;
	};
	interface HTMLCoreiconsShapeMousePointerElement
		extends Components.CoreiconsShapeMousePointer,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMousePointerElement: {
		prototype: HTMLCoreiconsShapeMousePointerElement;
		new (): HTMLCoreiconsShapeMousePointerElement;
	};
	interface HTMLCoreiconsShapeMoveElement
		extends Components.CoreiconsShapeMove,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeMoveElement: {
		prototype: HTMLCoreiconsShapeMoveElement;
		new (): HTMLCoreiconsShapeMoveElement;
	};
	interface HTMLCoreiconsShapePauseElement
		extends Components.CoreiconsShapePause,
			HTMLStencilElement {}
	var HTMLCoreiconsShapePauseElement: {
		prototype: HTMLCoreiconsShapePauseElement;
		new (): HTMLCoreiconsShapePauseElement;
	};
	interface HTMLCoreiconsShapePauseCircleElement
		extends Components.CoreiconsShapePauseCircle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapePauseCircleElement: {
		prototype: HTMLCoreiconsShapePauseCircleElement;
		new (): HTMLCoreiconsShapePauseCircleElement;
	};
	interface HTMLCoreiconsShapePlayElement
		extends Components.CoreiconsShapePlay,
			HTMLStencilElement {}
	var HTMLCoreiconsShapePlayElement: {
		prototype: HTMLCoreiconsShapePlayElement;
		new (): HTMLCoreiconsShapePlayElement;
	};
	interface HTMLCoreiconsShapePlayCircleElement
		extends Components.CoreiconsShapePlayCircle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapePlayCircleElement: {
		prototype: HTMLCoreiconsShapePlayCircleElement;
		new (): HTMLCoreiconsShapePlayCircleElement;
	};
	interface HTMLCoreiconsShapePlusElement
		extends Components.CoreiconsShapePlus,
			HTMLStencilElement {}
	var HTMLCoreiconsShapePlusElement: {
		prototype: HTMLCoreiconsShapePlusElement;
		new (): HTMLCoreiconsShapePlusElement;
	};
	interface HTMLCoreiconsShapePreferencesElement
		extends Components.CoreiconsShapePreferences,
			HTMLStencilElement {}
	var HTMLCoreiconsShapePreferencesElement: {
		prototype: HTMLCoreiconsShapePreferencesElement;
		new (): HTMLCoreiconsShapePreferencesElement;
	};
	interface HTMLCoreiconsShapeRefreshElement
		extends Components.CoreiconsShapeRefresh,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeRefreshElement: {
		prototype: HTMLCoreiconsShapeRefreshElement;
		new (): HTMLCoreiconsShapeRefreshElement;
	};
	interface HTMLCoreiconsShapeRepeatElement
		extends Components.CoreiconsShapeRepeat,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeRepeatElement: {
		prototype: HTMLCoreiconsShapeRepeatElement;
		new (): HTMLCoreiconsShapeRepeatElement;
	};
	interface HTMLCoreiconsShapeRotateElement
		extends Components.CoreiconsShapeRotate,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeRotateElement: {
		prototype: HTMLCoreiconsShapeRotateElement;
		new (): HTMLCoreiconsShapeRotateElement;
	};
	interface HTMLCoreiconsShapeSaveElement
		extends Components.CoreiconsShapeSave,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeSaveElement: {
		prototype: HTMLCoreiconsShapeSaveElement;
		new (): HTMLCoreiconsShapeSaveElement;
	};
	interface HTMLCoreiconsShapeSearchElement
		extends Components.CoreiconsShapeSearch,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeSearchElement: {
		prototype: HTMLCoreiconsShapeSearchElement;
		new (): HTMLCoreiconsShapeSearchElement;
	};
	interface HTMLCoreiconsShapeSettingsElement
		extends Components.CoreiconsShapeSettings,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeSettingsElement: {
		prototype: HTMLCoreiconsShapeSettingsElement;
		new (): HTMLCoreiconsShapeSettingsElement;
	};
	interface HTMLCoreiconsShapeShareElement
		extends Components.CoreiconsShapeShare,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeShareElement: {
		prototype: HTMLCoreiconsShapeShareElement;
		new (): HTMLCoreiconsShapeShareElement;
	};
	interface HTMLCoreiconsShapeShieldElement
		extends Components.CoreiconsShapeShield,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeShieldElement: {
		prototype: HTMLCoreiconsShapeShieldElement;
		new (): HTMLCoreiconsShapeShieldElement;
	};
	interface HTMLCoreiconsShapeShoppingCartElement
		extends Components.CoreiconsShapeShoppingCart,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeShoppingCartElement: {
		prototype: HTMLCoreiconsShapeShoppingCartElement;
		new (): HTMLCoreiconsShapeShoppingCartElement;
	};
	interface HTMLCoreiconsShapeShrinkElement
		extends Components.CoreiconsShapeShrink,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeShrinkElement: {
		prototype: HTMLCoreiconsShapeShrinkElement;
		new (): HTMLCoreiconsShapeShrinkElement;
	};
	interface HTMLCoreiconsShapeSmartphoneElement
		extends Components.CoreiconsShapeSmartphone,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeSmartphoneElement: {
		prototype: HTMLCoreiconsShapeSmartphoneElement;
		new (): HTMLCoreiconsShapeSmartphoneElement;
	};
	interface HTMLCoreiconsShapeSmileElement
		extends Components.CoreiconsShapeSmile,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeSmileElement: {
		prototype: HTMLCoreiconsShapeSmileElement;
		new (): HTMLCoreiconsShapeSmileElement;
	};
	interface HTMLCoreiconsShapeSpeakerElement
		extends Components.CoreiconsShapeSpeaker,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeSpeakerElement: {
		prototype: HTMLCoreiconsShapeSpeakerElement;
		new (): HTMLCoreiconsShapeSpeakerElement;
	};
	interface HTMLCoreiconsShapeStarElement
		extends Components.CoreiconsShapeStar,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeStarElement: {
		prototype: HTMLCoreiconsShapeStarElement;
		new (): HTMLCoreiconsShapeStarElement;
	};
	interface HTMLCoreiconsShapeSunElement extends Components.CoreiconsShapeSun, HTMLStencilElement {}
	var HTMLCoreiconsShapeSunElement: {
		prototype: HTMLCoreiconsShapeSunElement;
		new (): HTMLCoreiconsShapeSunElement;
	};
	interface HTMLCoreiconsShapeTagElement extends Components.CoreiconsShapeTag, HTMLStencilElement {}
	var HTMLCoreiconsShapeTagElement: {
		prototype: HTMLCoreiconsShapeTagElement;
		new (): HTMLCoreiconsShapeTagElement;
	};
	interface HTMLCoreiconsShapeTerminalElement
		extends Components.CoreiconsShapeTerminal,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeTerminalElement: {
		prototype: HTMLCoreiconsShapeTerminalElement;
		new (): HTMLCoreiconsShapeTerminalElement;
	};
	interface HTMLCoreiconsShapeThumbsElement
		extends Components.CoreiconsShapeThumbs,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeThumbsElement: {
		prototype: HTMLCoreiconsShapeThumbsElement;
		new (): HTMLCoreiconsShapeThumbsElement;
	};
	interface HTMLCoreiconsShapeToggleElement
		extends Components.CoreiconsShapeToggle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeToggleElement: {
		prototype: HTMLCoreiconsShapeToggleElement;
		new (): HTMLCoreiconsShapeToggleElement;
	};
	interface HTMLCoreiconsShapeToolElement
		extends Components.CoreiconsShapeTool,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeToolElement: {
		prototype: HTMLCoreiconsShapeToolElement;
		new (): HTMLCoreiconsShapeToolElement;
	};
	interface HTMLCoreiconsShapeTrashElement
		extends Components.CoreiconsShapeTrash,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeTrashElement: {
		prototype: HTMLCoreiconsShapeTrashElement;
		new (): HTMLCoreiconsShapeTrashElement;
	};
	interface HTMLCoreiconsShapeTrendingElement
		extends Components.CoreiconsShapeTrending,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeTrendingElement: {
		prototype: HTMLCoreiconsShapeTrendingElement;
		new (): HTMLCoreiconsShapeTrendingElement;
	};
	interface HTMLCoreiconsShapeTriangleElement
		extends Components.CoreiconsShapeTriangle,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeTriangleElement: {
		prototype: HTMLCoreiconsShapeTriangleElement;
		new (): HTMLCoreiconsShapeTriangleElement;
	};
	interface HTMLCoreiconsShapeTwitterElement
		extends Components.CoreiconsShapeTwitter,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeTwitterElement: {
		prototype: HTMLCoreiconsShapeTwitterElement;
		new (): HTMLCoreiconsShapeTwitterElement;
	};
	interface HTMLCoreiconsShapeTypeElement
		extends Components.CoreiconsShapeType,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeTypeElement: {
		prototype: HTMLCoreiconsShapeTypeElement;
		new (): HTMLCoreiconsShapeTypeElement;
	};
	interface HTMLCoreiconsShapeUnderlineElement
		extends Components.CoreiconsShapeUnderline,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeUnderlineElement: {
		prototype: HTMLCoreiconsShapeUnderlineElement;
		new (): HTMLCoreiconsShapeUnderlineElement;
	};
	interface HTMLCoreiconsShapeUnlockElement
		extends Components.CoreiconsShapeUnlock,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeUnlockElement: {
		prototype: HTMLCoreiconsShapeUnlockElement;
		new (): HTMLCoreiconsShapeUnlockElement;
	};
	interface HTMLCoreiconsShapeUploadElement
		extends Components.CoreiconsShapeUpload,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeUploadElement: {
		prototype: HTMLCoreiconsShapeUploadElement;
		new (): HTMLCoreiconsShapeUploadElement;
	};
	interface HTMLCoreiconsShapeUserElement
		extends Components.CoreiconsShapeUser,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeUserElement: {
		prototype: HTMLCoreiconsShapeUserElement;
		new (): HTMLCoreiconsShapeUserElement;
	};
	interface HTMLCoreiconsShapeUsersElement
		extends Components.CoreiconsShapeUsers,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeUsersElement: {
		prototype: HTMLCoreiconsShapeUsersElement;
		new (): HTMLCoreiconsShapeUsersElement;
	};
	interface HTMLCoreiconsShapeVolumeElement
		extends Components.CoreiconsShapeVolume,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeVolumeElement: {
		prototype: HTMLCoreiconsShapeVolumeElement;
		new (): HTMLCoreiconsShapeVolumeElement;
	};
	interface HTMLCoreiconsShapeXElement extends Components.CoreiconsShapeX, HTMLStencilElement {}
	var HTMLCoreiconsShapeXElement: {
		prototype: HTMLCoreiconsShapeXElement;
		new (): HTMLCoreiconsShapeXElement;
	};
	interface HTMLCoreiconsShapeZapElement extends Components.CoreiconsShapeZap, HTMLStencilElement {}
	var HTMLCoreiconsShapeZapElement: {
		prototype: HTMLCoreiconsShapeZapElement;
		new (): HTMLCoreiconsShapeZapElement;
	};
	interface HTMLCoreiconsShapeZoomElement
		extends Components.CoreiconsShapeZoom,
			HTMLStencilElement {}
	var HTMLCoreiconsShapeZoomElement: {
		prototype: HTMLCoreiconsShapeZoomElement;
		new (): HTMLCoreiconsShapeZoomElement;
	};
	interface HTMLElementTagNameMap {
		"coreicons-logo-discord": HTMLCoreiconsLogoDiscordElement;
		"coreicons-logo-figma": HTMLCoreiconsLogoFigmaElement;
		"coreicons-logo-github": HTMLCoreiconsLogoGithubElement;
		"coreicons-logo-reddit": HTMLCoreiconsLogoRedditElement;
		"coreicons-shape-airplay": HTMLCoreiconsShapeAirplayElement;
		"coreicons-shape-alert-triangle": HTMLCoreiconsShapeAlertTriangleElement;
		"coreicons-shape-align": HTMLCoreiconsShapeAlignElement;
		"coreicons-shape-arrow": HTMLCoreiconsShapeArrowElement;
		"coreicons-shape-at-sign": HTMLCoreiconsShapeAtSignElement;
		"coreicons-shape-award": HTMLCoreiconsShapeAwardElement;
		"coreicons-shape-bar-chart": HTMLCoreiconsShapeBarChartElement;
		"coreicons-shape-bell": HTMLCoreiconsShapeBellElement;
		"coreicons-shape-bold": HTMLCoreiconsShapeBoldElement;
		"coreicons-shape-book": HTMLCoreiconsShapeBookElement;
		"coreicons-shape-box": HTMLCoreiconsShapeBoxElement;
		"coreicons-shape-calendar": HTMLCoreiconsShapeCalendarElement;
		"coreicons-shape-cast": HTMLCoreiconsShapeCastElement;
		"coreicons-shape-check": HTMLCoreiconsShapeCheckElement;
		"coreicons-shape-chevron": HTMLCoreiconsShapeChevronElement;
		"coreicons-shape-chevrons": HTMLCoreiconsShapeChevronsElement;
		"coreicons-shape-circle": HTMLCoreiconsShapeCircleElement;
		"coreicons-shape-clipboard": HTMLCoreiconsShapeClipboardElement;
		"coreicons-shape-clock": HTMLCoreiconsShapeClockElement;
		"coreicons-shape-cloud": HTMLCoreiconsShapeCloudElement;
		"coreicons-shape-code": HTMLCoreiconsShapeCodeElement;
		"coreicons-shape-compass": HTMLCoreiconsShapeCompassElement;
		"coreicons-shape-copy": HTMLCoreiconsShapeCopyElement;
		"coreicons-shape-corner": HTMLCoreiconsShapeCornerElement;
		"coreicons-shape-delete": HTMLCoreiconsShapeDeleteElement;
		"coreicons-shape-dice": HTMLCoreiconsShapeDiceElement;
		"coreicons-shape-download": HTMLCoreiconsShapeDownloadElement;
		"coreicons-shape-edit": HTMLCoreiconsShapeEditElement;
		"coreicons-shape-expand": HTMLCoreiconsShapeExpandElement;
		"coreicons-shape-external-link": HTMLCoreiconsShapeExternalLinkElement;
		"coreicons-shape-eye": HTMLCoreiconsShapeEyeElement;
		"coreicons-shape-file": HTMLCoreiconsShapeFileElement;
		"coreicons-shape-filter": HTMLCoreiconsShapeFilterElement;
		"coreicons-shape-flag": HTMLCoreiconsShapeFlagElement;
		"coreicons-shape-folder": HTMLCoreiconsShapeFolderElement;
		"coreicons-shape-forum": HTMLCoreiconsShapeForumElement;
		"coreicons-shape-frown": HTMLCoreiconsShapeFrownElement;
		"coreicons-shape-gift": HTMLCoreiconsShapeGiftElement;
		"coreicons-shape-globe": HTMLCoreiconsShapeGlobeElement;
		"coreicons-shape-grid": HTMLCoreiconsShapeGridElement;
		"coreicons-shape-hard-drive": HTMLCoreiconsShapeHardDriveElement;
		"coreicons-shape-hash": HTMLCoreiconsShapeHashElement;
		"coreicons-shape-headphones": HTMLCoreiconsShapeHeadphonesElement;
		"coreicons-shape-heart": HTMLCoreiconsShapeHeartElement;
		"coreicons-shape-help-circle": HTMLCoreiconsShapeHelpCircleElement;
		"coreicons-shape-home": HTMLCoreiconsShapeHomeElement;
		"coreicons-shape-info": HTMLCoreiconsShapeInfoElement;
		"coreicons-shape-italic": HTMLCoreiconsShapeItalicElement;
		"coreicons-shape-key": HTMLCoreiconsShapeKeyElement;
		"coreicons-shape-link": HTMLCoreiconsShapeLinkElement;
		"coreicons-shape-list": HTMLCoreiconsShapeListElement;
		"coreicons-shape-lock": HTMLCoreiconsShapeLockElement;
		"coreicons-shape-log-in": HTMLCoreiconsShapeLogInElement;
		"coreicons-shape-log-out": HTMLCoreiconsShapeLogOutElement;
		"coreicons-shape-logo": HTMLCoreiconsShapeLogoElement;
		"coreicons-shape-mail": HTMLCoreiconsShapeMailElement;
		"coreicons-shape-map-pin": HTMLCoreiconsShapeMapPinElement;
		"coreicons-shape-maximize": HTMLCoreiconsShapeMaximizeElement;
		"coreicons-shape-media-skip": HTMLCoreiconsShapeMediaSkipElement;
		"coreicons-shape-meh": HTMLCoreiconsShapeMehElement;
		"coreicons-shape-menu": HTMLCoreiconsShapeMenuElement;
		"coreicons-shape-message-circle": HTMLCoreiconsShapeMessageCircleElement;
		"coreicons-shape-minimize": HTMLCoreiconsShapeMinimizeElement;
		"coreicons-shape-minus": HTMLCoreiconsShapeMinusElement;
		"coreicons-shape-monitor": HTMLCoreiconsShapeMonitorElement;
		"coreicons-shape-moon": HTMLCoreiconsShapeMoonElement;
		"coreicons-shape-more": HTMLCoreiconsShapeMoreElement;
		"coreicons-shape-mouse-pointer": HTMLCoreiconsShapeMousePointerElement;
		"coreicons-shape-move": HTMLCoreiconsShapeMoveElement;
		"coreicons-shape-pause": HTMLCoreiconsShapePauseElement;
		"coreicons-shape-pause-circle": HTMLCoreiconsShapePauseCircleElement;
		"coreicons-shape-play": HTMLCoreiconsShapePlayElement;
		"coreicons-shape-play-circle": HTMLCoreiconsShapePlayCircleElement;
		"coreicons-shape-plus": HTMLCoreiconsShapePlusElement;
		"coreicons-shape-preferences": HTMLCoreiconsShapePreferencesElement;
		"coreicons-shape-refresh": HTMLCoreiconsShapeRefreshElement;
		"coreicons-shape-repeat": HTMLCoreiconsShapeRepeatElement;
		"coreicons-shape-rotate": HTMLCoreiconsShapeRotateElement;
		"coreicons-shape-save": HTMLCoreiconsShapeSaveElement;
		"coreicons-shape-search": HTMLCoreiconsShapeSearchElement;
		"coreicons-shape-settings": HTMLCoreiconsShapeSettingsElement;
		"coreicons-shape-share": HTMLCoreiconsShapeShareElement;
		"coreicons-shape-shield": HTMLCoreiconsShapeShieldElement;
		"coreicons-shape-shopping-cart": HTMLCoreiconsShapeShoppingCartElement;
		"coreicons-shape-shrink": HTMLCoreiconsShapeShrinkElement;
		"coreicons-shape-smartphone": HTMLCoreiconsShapeSmartphoneElement;
		"coreicons-shape-smile": HTMLCoreiconsShapeSmileElement;
		"coreicons-shape-speaker": HTMLCoreiconsShapeSpeakerElement;
		"coreicons-shape-star": HTMLCoreiconsShapeStarElement;
		"coreicons-shape-sun": HTMLCoreiconsShapeSunElement;
		"coreicons-shape-tag": HTMLCoreiconsShapeTagElement;
		"coreicons-shape-terminal": HTMLCoreiconsShapeTerminalElement;
		"coreicons-shape-thumbs": HTMLCoreiconsShapeThumbsElement;
		"coreicons-shape-toggle": HTMLCoreiconsShapeToggleElement;
		"coreicons-shape-tool": HTMLCoreiconsShapeToolElement;
		"coreicons-shape-trash": HTMLCoreiconsShapeTrashElement;
		"coreicons-shape-trending": HTMLCoreiconsShapeTrendingElement;
		"coreicons-shape-triangle": HTMLCoreiconsShapeTriangleElement;
		"coreicons-shape-twitter": HTMLCoreiconsShapeTwitterElement;
		"coreicons-shape-type": HTMLCoreiconsShapeTypeElement;
		"coreicons-shape-underline": HTMLCoreiconsShapeUnderlineElement;
		"coreicons-shape-unlock": HTMLCoreiconsShapeUnlockElement;
		"coreicons-shape-upload": HTMLCoreiconsShapeUploadElement;
		"coreicons-shape-user": HTMLCoreiconsShapeUserElement;
		"coreicons-shape-users": HTMLCoreiconsShapeUsersElement;
		"coreicons-shape-volume": HTMLCoreiconsShapeVolumeElement;
		"coreicons-shape-x": HTMLCoreiconsShapeXElement;
		"coreicons-shape-zap": HTMLCoreiconsShapeZapElement;
		"coreicons-shape-zoom": HTMLCoreiconsShapeZoomElement;
	}
}
declare namespace LocalJSX {
	interface CoreiconsLogoDiscord {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsLogoFigma {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsLogoGithub {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsLogoReddit {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAirplay {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAlertTriangle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAlign {
		height?: string | number;
		variant: "center" | "justify" | "left" | "right";
		width?: string | number;
	}
	interface CoreiconsShapeArrow {
		height?: string | number;
		variant: "up" | "right" | "down" | "left";
		width?: string | number;
	}
	interface CoreiconsShapeAtSign {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeAward {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeBarChart {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeBell {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeBold {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeBook {
		height?: string | number;
		variant: "open" | "close";
		width?: string | number;
	}
	interface CoreiconsShapeBox {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCalendar {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCast {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCheck {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeChevron {
		height?: string | number;
		variant: "up" | "right" | "down" | "left";
		width?: string | number;
	}
	interface CoreiconsShapeChevrons {
		height?: string | number;
		variant: "up" | "right" | "down" | "left";
		width?: string | number;
	}
	interface CoreiconsShapeCircle {
		height?: string | number;
		variant: "outline" | "filled";
		width?: string | number;
	}
	interface CoreiconsShapeClipboard {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeClock {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCloud {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeCode {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCompass {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCopy {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeCorner {
		height?: string | number;
		variant:
			| "down-right"
			| "down-left"
			| "left-down"
			| "left-up"
			| "up-left"
			| "up-right"
			| "right-up"
			| "right-down";
		width?: string | number;
	}
	interface CoreiconsShapeDelete {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeDice {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeDownload {
		height?: string | number;
		variant: "arrow" | "cloud";
		width?: string | number;
	}
	interface CoreiconsShapeEdit {
		height?: string | number;
		variant: "box" | "pencil" | "line-with-pencil";
		width?: string | number;
	}
	interface CoreiconsShapeExpand {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeExternalLink {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeEye {
		height?: string | number;
		variant: "open" | "close";
		width?: string | number;
	}
	interface CoreiconsShapeFile {
		height?: string | number;
		variant: "normal" | "minus" | "plus" | "text";
		width?: string | number;
	}
	interface CoreiconsShapeFilter {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeFlag {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeFolder {
		height?: string | number;
		variant: "normal" | "minus" | "plus";
		width?: string | number;
	}
	interface CoreiconsShapeForum {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeFrown {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeGift {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeGlobe {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeGrid {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHardDrive {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHash {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHeadphones {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHeart {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHelpCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeHome {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeInfo {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeItalic {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeKey {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLink {
		height?: string | number;
		variant: "tilted" | "horizontal";
		width?: string | number;
	}
	interface CoreiconsShapeList {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLock {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLogIn {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLogOut {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeLogo {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMail {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMapPin {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMaximize {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMediaSkip {
		height?: string | number;
		variant: "fast-forward" | "rewind";
		width?: string | number;
	}
	interface CoreiconsShapeMeh {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMenu {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMessageCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMinimize {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMinus {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMonitor {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMoon {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMore {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMousePointer {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeMove {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePause {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePauseCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePlay {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePlayCircle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapePlus {
		height?: string | number;
		variant: "no-border" | "circle" | "square";
		width?: string | number;
	}
	interface CoreiconsShapePreferences {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeRefresh {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeRepeat {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeRotate {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSave {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSearch {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSettings {
		height?: string | number;
		variant: "outline" | "filled";
		width?: string | number;
	}
	interface CoreiconsShapeShare {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeShield {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeShoppingCart {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeShrink {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSmartphone {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSmile {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSpeaker {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeStar {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeSun {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTag {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTerminal {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeThumbs {
		height?: string | number;
		variant: "up" | "down";
		width?: string | number;
	}
	interface CoreiconsShapeToggle {
		height?: string | number;
		variant: "off" | "on";
		width?: string | number;
	}
	interface CoreiconsShapeTool {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTrash {
		height?: string | number;
		variant: "with-lines" | "without-lines";
		width?: string | number;
	}
	interface CoreiconsShapeTrending {
		height?: string | number;
		variant: "up" | "down";
		width?: string | number;
	}
	interface CoreiconsShapeTriangle {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeTwitter {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeType {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeUnderline {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeUnlock {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeUpload {
		height?: string | number;
		variant: "arrow" | "cloud";
		width?: string | number;
	}
	interface CoreiconsShapeUser {
		height?: string | number;
		variant: "normal" | "check" | "minus" | "plus" | "x";
		width?: string | number;
	}
	interface CoreiconsShapeUsers {
		height?: string | number;
		width?: string | number;
	}
	interface CoreiconsShapeVolume {
		height?: string | number;
		variant: "off" | "half" | "full" | "mute";
		width?: string | number;
	}
	interface CoreiconsShapeX {
		height?: string | number;
		variant: "no-border" | "circle" | "octagon" | "square";
		width?: string | number;
	}
	interface CoreiconsShapeZap {
		height?: string | number;
		variant: "on" | "off";
		width?: string | number;
	}
	interface CoreiconsShapeZoom {
		height?: string | number;
		variant: "in" | "out";
		width?: string | number;
	}
	interface IntrinsicElements {
		"coreicons-logo-discord": CoreiconsLogoDiscord;
		"coreicons-logo-figma": CoreiconsLogoFigma;
		"coreicons-logo-github": CoreiconsLogoGithub;
		"coreicons-logo-reddit": CoreiconsLogoReddit;
		"coreicons-shape-airplay": CoreiconsShapeAirplay;
		"coreicons-shape-alert-triangle": CoreiconsShapeAlertTriangle;
		"coreicons-shape-align": CoreiconsShapeAlign;
		"coreicons-shape-arrow": CoreiconsShapeArrow;
		"coreicons-shape-at-sign": CoreiconsShapeAtSign;
		"coreicons-shape-award": CoreiconsShapeAward;
		"coreicons-shape-bar-chart": CoreiconsShapeBarChart;
		"coreicons-shape-bell": CoreiconsShapeBell;
		"coreicons-shape-bold": CoreiconsShapeBold;
		"coreicons-shape-book": CoreiconsShapeBook;
		"coreicons-shape-box": CoreiconsShapeBox;
		"coreicons-shape-calendar": CoreiconsShapeCalendar;
		"coreicons-shape-cast": CoreiconsShapeCast;
		"coreicons-shape-check": CoreiconsShapeCheck;
		"coreicons-shape-chevron": CoreiconsShapeChevron;
		"coreicons-shape-chevrons": CoreiconsShapeChevrons;
		"coreicons-shape-circle": CoreiconsShapeCircle;
		"coreicons-shape-clipboard": CoreiconsShapeClipboard;
		"coreicons-shape-clock": CoreiconsShapeClock;
		"coreicons-shape-cloud": CoreiconsShapeCloud;
		"coreicons-shape-code": CoreiconsShapeCode;
		"coreicons-shape-compass": CoreiconsShapeCompass;
		"coreicons-shape-copy": CoreiconsShapeCopy;
		"coreicons-shape-corner": CoreiconsShapeCorner;
		"coreicons-shape-delete": CoreiconsShapeDelete;
		"coreicons-shape-dice": CoreiconsShapeDice;
		"coreicons-shape-download": CoreiconsShapeDownload;
		"coreicons-shape-edit": CoreiconsShapeEdit;
		"coreicons-shape-expand": CoreiconsShapeExpand;
		"coreicons-shape-external-link": CoreiconsShapeExternalLink;
		"coreicons-shape-eye": CoreiconsShapeEye;
		"coreicons-shape-file": CoreiconsShapeFile;
		"coreicons-shape-filter": CoreiconsShapeFilter;
		"coreicons-shape-flag": CoreiconsShapeFlag;
		"coreicons-shape-folder": CoreiconsShapeFolder;
		"coreicons-shape-forum": CoreiconsShapeForum;
		"coreicons-shape-frown": CoreiconsShapeFrown;
		"coreicons-shape-gift": CoreiconsShapeGift;
		"coreicons-shape-globe": CoreiconsShapeGlobe;
		"coreicons-shape-grid": CoreiconsShapeGrid;
		"coreicons-shape-hard-drive": CoreiconsShapeHardDrive;
		"coreicons-shape-hash": CoreiconsShapeHash;
		"coreicons-shape-headphones": CoreiconsShapeHeadphones;
		"coreicons-shape-heart": CoreiconsShapeHeart;
		"coreicons-shape-help-circle": CoreiconsShapeHelpCircle;
		"coreicons-shape-home": CoreiconsShapeHome;
		"coreicons-shape-info": CoreiconsShapeInfo;
		"coreicons-shape-italic": CoreiconsShapeItalic;
		"coreicons-shape-key": CoreiconsShapeKey;
		"coreicons-shape-link": CoreiconsShapeLink;
		"coreicons-shape-list": CoreiconsShapeList;
		"coreicons-shape-lock": CoreiconsShapeLock;
		"coreicons-shape-log-in": CoreiconsShapeLogIn;
		"coreicons-shape-log-out": CoreiconsShapeLogOut;
		"coreicons-shape-logo": CoreiconsShapeLogo;
		"coreicons-shape-mail": CoreiconsShapeMail;
		"coreicons-shape-map-pin": CoreiconsShapeMapPin;
		"coreicons-shape-maximize": CoreiconsShapeMaximize;
		"coreicons-shape-media-skip": CoreiconsShapeMediaSkip;
		"coreicons-shape-meh": CoreiconsShapeMeh;
		"coreicons-shape-menu": CoreiconsShapeMenu;
		"coreicons-shape-message-circle": CoreiconsShapeMessageCircle;
		"coreicons-shape-minimize": CoreiconsShapeMinimize;
		"coreicons-shape-minus": CoreiconsShapeMinus;
		"coreicons-shape-monitor": CoreiconsShapeMonitor;
		"coreicons-shape-moon": CoreiconsShapeMoon;
		"coreicons-shape-more": CoreiconsShapeMore;
		"coreicons-shape-mouse-pointer": CoreiconsShapeMousePointer;
		"coreicons-shape-move": CoreiconsShapeMove;
		"coreicons-shape-pause": CoreiconsShapePause;
		"coreicons-shape-pause-circle": CoreiconsShapePauseCircle;
		"coreicons-shape-play": CoreiconsShapePlay;
		"coreicons-shape-play-circle": CoreiconsShapePlayCircle;
		"coreicons-shape-plus": CoreiconsShapePlus;
		"coreicons-shape-preferences": CoreiconsShapePreferences;
		"coreicons-shape-refresh": CoreiconsShapeRefresh;
		"coreicons-shape-repeat": CoreiconsShapeRepeat;
		"coreicons-shape-rotate": CoreiconsShapeRotate;
		"coreicons-shape-save": CoreiconsShapeSave;
		"coreicons-shape-search": CoreiconsShapeSearch;
		"coreicons-shape-settings": CoreiconsShapeSettings;
		"coreicons-shape-share": CoreiconsShapeShare;
		"coreicons-shape-shield": CoreiconsShapeShield;
		"coreicons-shape-shopping-cart": CoreiconsShapeShoppingCart;
		"coreicons-shape-shrink": CoreiconsShapeShrink;
		"coreicons-shape-smartphone": CoreiconsShapeSmartphone;
		"coreicons-shape-smile": CoreiconsShapeSmile;
		"coreicons-shape-speaker": CoreiconsShapeSpeaker;
		"coreicons-shape-star": CoreiconsShapeStar;
		"coreicons-shape-sun": CoreiconsShapeSun;
		"coreicons-shape-tag": CoreiconsShapeTag;
		"coreicons-shape-terminal": CoreiconsShapeTerminal;
		"coreicons-shape-thumbs": CoreiconsShapeThumbs;
		"coreicons-shape-toggle": CoreiconsShapeToggle;
		"coreicons-shape-tool": CoreiconsShapeTool;
		"coreicons-shape-trash": CoreiconsShapeTrash;
		"coreicons-shape-trending": CoreiconsShapeTrending;
		"coreicons-shape-triangle": CoreiconsShapeTriangle;
		"coreicons-shape-twitter": CoreiconsShapeTwitter;
		"coreicons-shape-type": CoreiconsShapeType;
		"coreicons-shape-underline": CoreiconsShapeUnderline;
		"coreicons-shape-unlock": CoreiconsShapeUnlock;
		"coreicons-shape-upload": CoreiconsShapeUpload;
		"coreicons-shape-user": CoreiconsShapeUser;
		"coreicons-shape-users": CoreiconsShapeUsers;
		"coreicons-shape-volume": CoreiconsShapeVolume;
		"coreicons-shape-x": CoreiconsShapeX;
		"coreicons-shape-zap": CoreiconsShapeZap;
		"coreicons-shape-zoom": CoreiconsShapeZoom;
	}
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
	export namespace JSX {
		interface IntrinsicElements {
			"coreicons-logo-discord": LocalJSX.CoreiconsLogoDiscord &
				JSXBase.HTMLAttributes<HTMLCoreiconsLogoDiscordElement>;
			"coreicons-logo-figma": LocalJSX.CoreiconsLogoFigma &
				JSXBase.HTMLAttributes<HTMLCoreiconsLogoFigmaElement>;
			"coreicons-logo-github": LocalJSX.CoreiconsLogoGithub &
				JSXBase.HTMLAttributes<HTMLCoreiconsLogoGithubElement>;
			"coreicons-logo-reddit": LocalJSX.CoreiconsLogoReddit &
				JSXBase.HTMLAttributes<HTMLCoreiconsLogoRedditElement>;
			"coreicons-shape-airplay": LocalJSX.CoreiconsShapeAirplay &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeAirplayElement>;
			"coreicons-shape-alert-triangle": LocalJSX.CoreiconsShapeAlertTriangle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeAlertTriangleElement>;
			"coreicons-shape-align": LocalJSX.CoreiconsShapeAlign &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeAlignElement>;
			"coreicons-shape-arrow": LocalJSX.CoreiconsShapeArrow &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeArrowElement>;
			"coreicons-shape-at-sign": LocalJSX.CoreiconsShapeAtSign &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeAtSignElement>;
			"coreicons-shape-award": LocalJSX.CoreiconsShapeAward &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeAwardElement>;
			"coreicons-shape-bar-chart": LocalJSX.CoreiconsShapeBarChart &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeBarChartElement>;
			"coreicons-shape-bell": LocalJSX.CoreiconsShapeBell &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeBellElement>;
			"coreicons-shape-bold": LocalJSX.CoreiconsShapeBold &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeBoldElement>;
			"coreicons-shape-book": LocalJSX.CoreiconsShapeBook &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeBookElement>;
			"coreicons-shape-box": LocalJSX.CoreiconsShapeBox &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeBoxElement>;
			"coreicons-shape-calendar": LocalJSX.CoreiconsShapeCalendar &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCalendarElement>;
			"coreicons-shape-cast": LocalJSX.CoreiconsShapeCast &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCastElement>;
			"coreicons-shape-check": LocalJSX.CoreiconsShapeCheck &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCheckElement>;
			"coreicons-shape-chevron": LocalJSX.CoreiconsShapeChevron &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeChevronElement>;
			"coreicons-shape-chevrons": LocalJSX.CoreiconsShapeChevrons &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeChevronsElement>;
			"coreicons-shape-circle": LocalJSX.CoreiconsShapeCircle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCircleElement>;
			"coreicons-shape-clipboard": LocalJSX.CoreiconsShapeClipboard &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeClipboardElement>;
			"coreicons-shape-clock": LocalJSX.CoreiconsShapeClock &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeClockElement>;
			"coreicons-shape-cloud": LocalJSX.CoreiconsShapeCloud &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCloudElement>;
			"coreicons-shape-code": LocalJSX.CoreiconsShapeCode &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCodeElement>;
			"coreicons-shape-compass": LocalJSX.CoreiconsShapeCompass &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCompassElement>;
			"coreicons-shape-copy": LocalJSX.CoreiconsShapeCopy &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCopyElement>;
			"coreicons-shape-corner": LocalJSX.CoreiconsShapeCorner &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeCornerElement>;
			"coreicons-shape-delete": LocalJSX.CoreiconsShapeDelete &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeDeleteElement>;
			"coreicons-shape-dice": LocalJSX.CoreiconsShapeDice &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeDiceElement>;
			"coreicons-shape-download": LocalJSX.CoreiconsShapeDownload &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeDownloadElement>;
			"coreicons-shape-edit": LocalJSX.CoreiconsShapeEdit &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeEditElement>;
			"coreicons-shape-expand": LocalJSX.CoreiconsShapeExpand &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeExpandElement>;
			"coreicons-shape-external-link": LocalJSX.CoreiconsShapeExternalLink &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeExternalLinkElement>;
			"coreicons-shape-eye": LocalJSX.CoreiconsShapeEye &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeEyeElement>;
			"coreicons-shape-file": LocalJSX.CoreiconsShapeFile &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeFileElement>;
			"coreicons-shape-filter": LocalJSX.CoreiconsShapeFilter &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeFilterElement>;
			"coreicons-shape-flag": LocalJSX.CoreiconsShapeFlag &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeFlagElement>;
			"coreicons-shape-folder": LocalJSX.CoreiconsShapeFolder &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeFolderElement>;
			"coreicons-shape-forum": LocalJSX.CoreiconsShapeForum &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeForumElement>;
			"coreicons-shape-frown": LocalJSX.CoreiconsShapeFrown &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeFrownElement>;
			"coreicons-shape-gift": LocalJSX.CoreiconsShapeGift &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeGiftElement>;
			"coreicons-shape-globe": LocalJSX.CoreiconsShapeGlobe &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeGlobeElement>;
			"coreicons-shape-grid": LocalJSX.CoreiconsShapeGrid &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeGridElement>;
			"coreicons-shape-hard-drive": LocalJSX.CoreiconsShapeHardDrive &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeHardDriveElement>;
			"coreicons-shape-hash": LocalJSX.CoreiconsShapeHash &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeHashElement>;
			"coreicons-shape-headphones": LocalJSX.CoreiconsShapeHeadphones &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeHeadphonesElement>;
			"coreicons-shape-heart": LocalJSX.CoreiconsShapeHeart &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeHeartElement>;
			"coreicons-shape-help-circle": LocalJSX.CoreiconsShapeHelpCircle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeHelpCircleElement>;
			"coreicons-shape-home": LocalJSX.CoreiconsShapeHome &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeHomeElement>;
			"coreicons-shape-info": LocalJSX.CoreiconsShapeInfo &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeInfoElement>;
			"coreicons-shape-italic": LocalJSX.CoreiconsShapeItalic &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeItalicElement>;
			"coreicons-shape-key": LocalJSX.CoreiconsShapeKey &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeKeyElement>;
			"coreicons-shape-link": LocalJSX.CoreiconsShapeLink &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeLinkElement>;
			"coreicons-shape-list": LocalJSX.CoreiconsShapeList &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeListElement>;
			"coreicons-shape-lock": LocalJSX.CoreiconsShapeLock &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeLockElement>;
			"coreicons-shape-log-in": LocalJSX.CoreiconsShapeLogIn &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeLogInElement>;
			"coreicons-shape-log-out": LocalJSX.CoreiconsShapeLogOut &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeLogOutElement>;
			"coreicons-shape-logo": LocalJSX.CoreiconsShapeLogo &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeLogoElement>;
			"coreicons-shape-mail": LocalJSX.CoreiconsShapeMail &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMailElement>;
			"coreicons-shape-map-pin": LocalJSX.CoreiconsShapeMapPin &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMapPinElement>;
			"coreicons-shape-maximize": LocalJSX.CoreiconsShapeMaximize &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMaximizeElement>;
			"coreicons-shape-media-skip": LocalJSX.CoreiconsShapeMediaSkip &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMediaSkipElement>;
			"coreicons-shape-meh": LocalJSX.CoreiconsShapeMeh &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMehElement>;
			"coreicons-shape-menu": LocalJSX.CoreiconsShapeMenu &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMenuElement>;
			"coreicons-shape-message-circle": LocalJSX.CoreiconsShapeMessageCircle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMessageCircleElement>;
			"coreicons-shape-minimize": LocalJSX.CoreiconsShapeMinimize &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMinimizeElement>;
			"coreicons-shape-minus": LocalJSX.CoreiconsShapeMinus &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMinusElement>;
			"coreicons-shape-monitor": LocalJSX.CoreiconsShapeMonitor &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMonitorElement>;
			"coreicons-shape-moon": LocalJSX.CoreiconsShapeMoon &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMoonElement>;
			"coreicons-shape-more": LocalJSX.CoreiconsShapeMore &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMoreElement>;
			"coreicons-shape-mouse-pointer": LocalJSX.CoreiconsShapeMousePointer &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMousePointerElement>;
			"coreicons-shape-move": LocalJSX.CoreiconsShapeMove &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeMoveElement>;
			"coreicons-shape-pause": LocalJSX.CoreiconsShapePause &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapePauseElement>;
			"coreicons-shape-pause-circle": LocalJSX.CoreiconsShapePauseCircle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapePauseCircleElement>;
			"coreicons-shape-play": LocalJSX.CoreiconsShapePlay &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapePlayElement>;
			"coreicons-shape-play-circle": LocalJSX.CoreiconsShapePlayCircle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapePlayCircleElement>;
			"coreicons-shape-plus": LocalJSX.CoreiconsShapePlus &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapePlusElement>;
			"coreicons-shape-preferences": LocalJSX.CoreiconsShapePreferences &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapePreferencesElement>;
			"coreicons-shape-refresh": LocalJSX.CoreiconsShapeRefresh &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeRefreshElement>;
			"coreicons-shape-repeat": LocalJSX.CoreiconsShapeRepeat &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeRepeatElement>;
			"coreicons-shape-rotate": LocalJSX.CoreiconsShapeRotate &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeRotateElement>;
			"coreicons-shape-save": LocalJSX.CoreiconsShapeSave &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSaveElement>;
			"coreicons-shape-search": LocalJSX.CoreiconsShapeSearch &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSearchElement>;
			"coreicons-shape-settings": LocalJSX.CoreiconsShapeSettings &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSettingsElement>;
			"coreicons-shape-share": LocalJSX.CoreiconsShapeShare &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeShareElement>;
			"coreicons-shape-shield": LocalJSX.CoreiconsShapeShield &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeShieldElement>;
			"coreicons-shape-shopping-cart": LocalJSX.CoreiconsShapeShoppingCart &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeShoppingCartElement>;
			"coreicons-shape-shrink": LocalJSX.CoreiconsShapeShrink &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeShrinkElement>;
			"coreicons-shape-smartphone": LocalJSX.CoreiconsShapeSmartphone &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSmartphoneElement>;
			"coreicons-shape-smile": LocalJSX.CoreiconsShapeSmile &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSmileElement>;
			"coreicons-shape-speaker": LocalJSX.CoreiconsShapeSpeaker &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSpeakerElement>;
			"coreicons-shape-star": LocalJSX.CoreiconsShapeStar &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeStarElement>;
			"coreicons-shape-sun": LocalJSX.CoreiconsShapeSun &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeSunElement>;
			"coreicons-shape-tag": LocalJSX.CoreiconsShapeTag &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTagElement>;
			"coreicons-shape-terminal": LocalJSX.CoreiconsShapeTerminal &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTerminalElement>;
			"coreicons-shape-thumbs": LocalJSX.CoreiconsShapeThumbs &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeThumbsElement>;
			"coreicons-shape-toggle": LocalJSX.CoreiconsShapeToggle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeToggleElement>;
			"coreicons-shape-tool": LocalJSX.CoreiconsShapeTool &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeToolElement>;
			"coreicons-shape-trash": LocalJSX.CoreiconsShapeTrash &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTrashElement>;
			"coreicons-shape-trending": LocalJSX.CoreiconsShapeTrending &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTrendingElement>;
			"coreicons-shape-triangle": LocalJSX.CoreiconsShapeTriangle &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTriangleElement>;
			"coreicons-shape-twitter": LocalJSX.CoreiconsShapeTwitter &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTwitterElement>;
			"coreicons-shape-type": LocalJSX.CoreiconsShapeType &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeTypeElement>;
			"coreicons-shape-underline": LocalJSX.CoreiconsShapeUnderline &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeUnderlineElement>;
			"coreicons-shape-unlock": LocalJSX.CoreiconsShapeUnlock &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeUnlockElement>;
			"coreicons-shape-upload": LocalJSX.CoreiconsShapeUpload &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeUploadElement>;
			"coreicons-shape-user": LocalJSX.CoreiconsShapeUser &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeUserElement>;
			"coreicons-shape-users": LocalJSX.CoreiconsShapeUsers &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeUsersElement>;
			"coreicons-shape-volume": LocalJSX.CoreiconsShapeVolume &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeVolumeElement>;
			"coreicons-shape-x": LocalJSX.CoreiconsShapeX &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeXElement>;
			"coreicons-shape-zap": LocalJSX.CoreiconsShapeZap &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeZapElement>;
			"coreicons-shape-zoom": LocalJSX.CoreiconsShapeZoom &
				JSXBase.HTMLAttributes<HTMLCoreiconsShapeZoomElement>;
		}
	}
}
